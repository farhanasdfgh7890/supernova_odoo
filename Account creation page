<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Create Account</title>
  <style>
    * {
      box-sizing: border-box;
      margin: 0;
      padding: 0;
      font-family: 'Segoe UI', Tahoma, sans-serif;
    }

    body {
      display: flex;
      flex-direction: column;
      min-height: 100vh;
      background: url('https://i.pinimg.com/1200x/b6/b8/31/b6b8315013361056dd4e3ef5a3305755.jpg') no-repeat center center fixed;
      background-size: cover;
    }

    .overlay {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(255, 255, 255, 0.6);
      z-index: -1;
    }

    /* Navbar */
    .navbar {
      display: flex;
      justify-content: space-between;
      align-items: center;
      background: rgba(255, 255, 255, 0.85);
      padding: 1rem 2rem;
      box-shadow: 0 2px 6px rgba(0,0,0,0.1);
    }

    .navbar .logo {
      font-size: 1.5rem;
      font-weight: bold;
      color: #6a0dad;
    }

    .nav-links {
      display: flex;
      gap: 1.5rem;
    }

    .nav-links a {
      text-decoration: none;
      color: #333;
      font-weight: 500;
    }

    .nav-links a:hover {
      color: #6a0dad;
    }

    /* Main Container */
    .main {
      display: flex;
      justify-content: center;
      align-items: center;
      flex: 1;
      padding: 1rem;
    }

    .container {
      background: rgba(255, 255, 255, 0.9);
      padding: 2rem;
      width: 100%;
      max-width: 450px;
      border-radius: 8px;
      box-shadow: 0 4px 10px rgba(0,0,0,0.1);
    }

    h2 {
      margin-bottom: 1.5rem;
      color: #333;
      text-align: center;
    }

    .input-group {
      margin-bottom: 1rem;
      position: relative;
    }

    label {
      display: block;
      margin-bottom: 0.4rem;
      font-size: 0.95rem;
      color: #444;
    }

    input[type="text"],
    input[type="email"],
    input[type="password"] {
      width: 100%;
      padding: 0.6rem;
      border: 1px solid #ccc;
      border-radius: 4px;
    }

    small.error {
      color: red;
      font-size: 0.8rem;
      display: block;
      margin-top: 0.3rem;
      min-height: 14px;
    }

    .show-password {
      position: absolute;
      right: 10px;
      top: 35px;
      font-size: 0.8rem;
      cursor: pointer;
      color: #6a0dad;
      user-select: none;
    }

    .checkbox-group {
      display: flex;
      align-items: flex-start;
      font-size: 0.85rem;
      margin: 1rem 0;
      color: #555;
    }

    .checkbox-group input[type="checkbox"] {
      margin-right: 0.5rem;
      margin-top: 2px;
    }

    .checkbox-group a {
      color: #007bff;
      text-decoration: none;
    }

    .checkbox-group a:hover {
      text-decoration: underline;
    }

    button {
      width: 100%;
      padding: 0.8rem;
      background-color: #6a0dad;
      color: white;
      border: none;
      font-size: 1rem;
      border-radius: 4px;
      cursor: pointer;
      transition: background 0.3s ease;
    }

    button:hover {
      background-color: #5a0099;
    }

    #message {
      margin-top: 1rem;
      text-align: center;
      font-size: 0.9rem;
      transition: all 0.3s ease;
    }

    /* Footer */
    footer {
      background: rgba(255, 255, 255, 0.85);
      padding: 1rem 2rem;
      display: flex;
      justify-content: space-between;
      align-items: flex-start;
      flex-wrap: wrap;
      border-top: 1px solid #ddd;
    }

    .footer-left {
      width: 10%;
    }

    .footer-left img {
      width: 80px;
      height: auto;
    }

    .footer-right {
      display: flex;
      gap: 2rem;
      flex-wrap: wrap;
      width: 60%;
      justify-content: flex-end;
    }

    .footer-column h4 {
      margin-bottom: 0.5rem;
      font-size: 1rem;
      color: #6a0dad;
    }

    .footer-column a {
      display: block;
      color: #333;
      text-decoration: none;
      font-size: 0.85rem;
      margin-bottom: 0.3rem;
    }

    .footer-column a:hover {
      color: #6a0dad;
    }

    /* Mobile responsiveness */
    @media (max-width: 768px) {
      .nav-links {
        flex-wrap: wrap;
        gap: 1rem;
        justify-content: center;
      }

      footer {
        flex-direction: column;
        align-items: flex-start;
      }

      .footer-right {
        flex-direction: column;
        gap: 1rem;
        width: 100%;
      }
    }
  </style>
</head>
<body>
  <div class="overlay"></div>

  <!-- Top Navigation -->
  <header class="navbar">
    <div class="logo">Supernova</div>
    <nav class="nav-links">
      <a href="#">Home</a>
      <a href="#">Solution</a>
      <a href="#">Login</a>
      <a href="#">Sign Up</a>
    </nav>
  </header>

  <!-- Main Content -->
  <div class="main">
    <div class="container">
      <h2>Create an Account</h2>

      <form id="signupForm">
        <div class="input-group">
          <label for="firstName">First Name</label>
          <input type="text" id="firstName" />
          <small class="error" id="firstNameError"></small>
        </div>

        <div class="input-group">
          <label for="lastName">Last Name</label>
          <input type="text" id="lastName" />
          <small class="error" id="lastNameError"></small>
        </div>

        <div class="input-group">
          <label for="email">Email</label>
          <input type="email" id="email" />
          <small class="error" id="emailError"></small>
        </div>

        <div class="input-group">
          <label for="password">Password</label>
          <input type="password" id="password" />
          <span class="show-password" id="togglePassword">Show</span>
          <small class="error" id="passwordError"></small>
        </div>

        <div class="checkbox-group">
          <input type="checkbox" id="terms" />
          <label for="terms">
            By creating an account, I agree to our
            <a href="#">Terms of Use</a> and
            <a href="#">Privacy Policy</a>.
          </label>
        </div>

        <button type="submit">Sign Up</button>
        <p id="message"></p>
      </form>
    </div>
  </div>

  <!-- Footer -->
  <footer>
    <div class="footer-left">
      <img src="https://i.pinimg.com/originals/52/d9/b3/52d9b35181578642c823f63a457fe99b.gif" alt="Company Logo">
    </div>
    <div class="footer-right">
      <div class="footer-column">
        <h4>Quick Links</h4>
        <a href="#">Home</a>
        <a href="#">Solution</a>
      </div>
      <div class="footer-column">
        <h4>Company</h4>
        <a href="#">About Us</a>
        <a href="#">Careers</a>
      </div>
      <div class="footer-column">
        <h4>Connect with Us</h4>
        <a href="#">Contact</a>
        <a href="#">Support</a>
      </div>
    </div>
  </footer>

  <script>
    document.addEventListener("DOMContentLoaded", function () {
      const form = document.getElementById("signupForm");
      const firstName = document.getElementById("firstName");
      const lastName = document.getElementById("lastName");
      const email = document.getElementById("email");
      const password = document.getElementById("password");
      const terms = document.getElementById("terms");
      const message = document.getElementById("message");

      const firstNameError = document.getElementById("firstNameError");
      const lastNameError = document.getElementById("lastNameError");
      const emailError = document.getElementById("emailError");
      const passwordError = document.getElementById("passwordError");

      const togglePassword = document.getElementById("togglePassword");

      const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
      const strongPasswordRegex = /^(?=.*[A-Z])(?=.*\d)(?=.*[!@#$%^&*]).{6,}$/;

      togglePassword.addEventListener("click", () => {
        const type = password.getAttribute("type") === "password" ? "text" : "password";
        password.setAttribute("type", type);
        togglePassword.textContent = type === "password" ? "Show" : "Hide";
      });

      firstName.addEventListener("input", () => {
        firstNameError.textContent = firstName.value.trim() ? "" : "First name is required.";
      });

      lastName.addEventListener("input", () => {
        lastNameError.textContent = lastName.value.trim() ? "" : "Last name is required.";
      });

      email.addEventListener("input", () => {
        const emailValue = email.value.trim();
        if (emailValue === "") {
          emailError.textContent = "Email is required.";
        } else if (!emailRegex.test(emailValue)) {
          emailError.textContent = "Enter a valid email address.";
        } else {
          emailError.textContent = "";
        }
      });

      password.addEventListener("input", () => {
        const passwordValue = password.value;
        if (passwordValue === "") {
          passwordError.textContent = "Password is required.";
        } else if (!strongPasswordRegex.test(passwordValue)) {
          passwordError.textContent = "Password must have at least 6 characters, 1 uppercase, 1 number & 1 special character.";
        } else {
          passwordError.textContent = "";
        }
      });

      form.addEventListener("submit", function (e) {
        e.preventDefault();

        let isValid = true;

        if (!firstName.value.trim()) {
          firstNameError.textContent = "First name is required.";
          isValid = false;
        }
        if (!lastName.value.trim()) {
          lastNameError.textContent = "Last name is required.";
          isValid = false;
        }
        if (!emailRegex.test(email.value.trim())) {
          emailError.textContent = "Enter a valid email address.";
          isValid = false;
        }
        if (!strongPasswordRegex.test(password.value)) {
          passwordError.textContent = "Password must have at least 6 characters, 1 uppercase, 1 number & 1 special character.";
          isValid = false;
        }
        if (!terms.checked) {
          message.textContent = "You must agree to the terms.";
          message.style.color = "red";
          return;
        }

        if (!isValid) return;

        message.textContent = "Account created successfully!";
        message.style.color = "green";
        message.style.transform = "scale(1.1)";
        setTimeout(() => (message.style.transform = "scale(1)"), 200);

        form.reset();
      });
    });
  </script>
</body>
</html>
